/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.1).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package eu.cokeman.cycleareastats.openapi.api;

import eu.cokeman.cycleareastats.openapi.model.AdministrativeAreasImportRequestDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.Optional;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Controller
@Tag(
    name = "administrativeAreaImportExport",
    description = "the administrativeAreaImportExport API")
public interface AdministrativeAreaImportExportApi {

  default Optional<NativeWebRequest> getRequest() {
    return Optional.empty();
  }

  /**
   * GET /administrative-areas/export-kml : Export administrative areas geometries to KML by country
   * and level
   *
   * @param countryName (required)
   * @param levelName (required)
   * @param fileName Optional file name for the downloaded KML file (optional)
   * @return KML file with geometries (status code 200)
   */
  @Operation(
      operationId = "exportAdministrativeAreasKml",
      summary = "Export administrative areas geometries to KML by country and level",
      tags = {"administrativeAreaImportExport"},
      responses = {
        @ApiResponse(
            responseCode = "200",
            description = "KML file with geometries",
            content = {
              @Content(
                  mediaType = "application/vnd.google-earth.kml+xml",
                  schema = @Schema(implementation = org.springframework.core.io.Resource.class))
            })
      })
  @RequestMapping(
      method = RequestMethod.GET,
      value = "/administrative-areas/export-kml",
      produces = {"application/vnd.google-earth.kml+xml"})
  default ResponseEntity<org.springframework.core.io.Resource> exportAdministrativeAreasKml(
      @NotNull
          @Parameter(
              name = "countryName",
              description = "",
              required = true,
              in = ParameterIn.QUERY)
          @Valid
          @RequestParam(value = "countryName", required = true)
          String countryName,
      @NotNull
          @Parameter(name = "levelName", description = "", required = true, in = ParameterIn.QUERY)
          @Valid
          @RequestParam(value = "levelName", required = true)
          String levelName,
      @Parameter(
              name = "fileName",
              description = "Optional file name for the downloaded KML file",
              in = ParameterIn.QUERY)
          @Valid
          @RequestParam(value = "fileName", required = false)
          String fileName) {
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  /**
   * POST /administrative-areas/import-kml : Import areas
   *
   * @param request (optional)
   * @param geometry (optional)
   * @return Bad Request (status code 400) or Created (status code 201)
   */
  @Operation(
      operationId = "importAdministrativeAreas",
      summary = "Import areas",
      tags = {"administrativeAreaImportExport"},
      responses = {
        @ApiResponse(responseCode = "400", description = "Bad Request"),
        @ApiResponse(responseCode = "201", description = "Created")
      })
  @RequestMapping(
      method = RequestMethod.POST,
      value = "/administrative-areas/import-kml",
      consumes = {"multipart/form-data"})
  default ResponseEntity<Void> importAdministrativeAreas(
      @Parameter(name = "request", description = "")
          @Valid
          @RequestPart(value = "request", required = false)
          AdministrativeAreasImportRequestDto request,
      @Parameter(name = "geometry", description = "")
          @RequestPart(value = "geometry", required = false)
          MultipartFile geometry) {
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
